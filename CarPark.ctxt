#BlueJ class context
comment0.target=CarPark
comment1.params=
comment1.target=CarPark()
comment1.text=\r\n\ Constructs\ a\ new\ CarPark\ object.\ Initializes\ the\ data\ structures\ for\ parking\ slots\ and\ tracking.\r\n
comment10.params=registrationNumber
comment10.target=void\ removeCarByRegistration(java.lang.String)
comment10.text=\r\n\ Removes\ a\ car\ from\ a\ parking\ slot\ by\ its\ registration\ number,\ if\ found\ and\ the\ slot\ is\ unoccupied.\r\n\ Prints\ relevant\ messages\ indicating\ success\ or\ failure.\r\n\r\n\ @param\ registrationNumber\ The\ registration\ number\ of\ the\ car\ to\ remove.\r\n
comment11.params=slotID
comment11.target=void\ removeCarBySlotID(java.lang.String)
comment11.text=\r\n\ Removes\ a\ car\ from\ a\ parking\ slot\ by\ Slot\ ID,\ if\ found\ and\ the\ slot\ is\ unoccupied.\r\n\ Prints\ relevant\ messages\ indicating\ success\ or\ failure.\r\n\r\n\ @param\ SlotID\ .\r\n
comment12.params=make
comment12.target=void\ findCarsByMake(java.lang.String)
comment12.text=\r\n\ Finds\ and\ displays\ information\ about\ cars\ with\ a\ specified\ make\ that\ are\ currently\ parked\ in\ the\ car\ park.\r\n\ This\ includes\ details\ like\ the\ slot\ ID,\ registration\ number,\ make,\ model,\ year,\ and\ occupied\ time.\r\n\ If\ the\ calculation\ of\ occupied\ time\ encounters\ an\ error,\ an\ error\ message\ is\ displayed.\r\n\r\n\ @param\ make\ The\ make\ of\ the\ cars\ to\ find.\r\n
comment2.params=
comment2.target=java.util.List\ getParkingSlots()
comment3.params=parkingSlot
comment3.target=boolean\ addParkingSlot(ParkingSlot)
comment3.text=\r\n\ Adds\ a\ parking\ slot\ to\ the\ car\ park.\r\n\r\n\ @param\ parkingSlot\ The\ parking\ slot\ to\ add.\r\n\ @return\ True\ if\ the\ parking\ slot\ is\ added\ successfully;\ otherwise,\ false\ if\ the\ slot\ number\ is\ not\ unique.\r\n
comment4.params=slotID
comment4.target=void\ deleteParkingSlot(java.lang.String)
comment4.text=\r\n\ Deletes\ a\ parking\ slot\ from\ the\ car\ park\ if\ it\ is\ unoccupied.\r\n\r\n\ @param\ slotID\ The\ ID\ of\ the\ parking\ slot\ to\ delete.\r\n
comment5.params=
comment5.target=void\ listAllSlots()
comment5.text=\r\n\ Lists\ all\ parking\ slots\ in\ the\ car\ park,\ including\ their\ status\ and\ occupied\ car\ details\ if\ applicable.\r\n
comment6.params=
comment6.target=java.util.Map\ getAllParkingSlotsAndStatus()
comment7.params=slotID
comment7.target=ParkingSlot\ getParkingSlot(java.lang.String)
comment7.text=\r\n\ Get\ a\ parking\ slot\ by\ its\ ID.\r\n\r\n\ @param\ slotID\ The\ ID\ of\ the\ parking\ slot\ to\ retrieve.\r\n\ @return\ The\ ParkingSlot\ object\ associated\ with\ the\ given\ slot\ ID,\ or\ null\ if\ not\ found.\r\n
comment8.params=slotID\ car
comment8.target=boolean\ parkCar(java.lang.String,\ Car)
comment8.text=\r\n\ Parks\ a\ car\ in\ a\ specified\ parking\ slot,\ provided\ the\ slot\ exists\ and\ is\ unoccupied.\r\n\r\n\ @param\ slotID\ The\ ID\ of\ the\ parking\ slot\ to\ park\ the\ car.\r\n\ @param\ car\ \ \ \ The\ car\ to\ park.\r\n\ @return\ True\ if\ the\ car\ is\ parked\ successfully;\ otherwise,\ false\ if\ the\ slot\ is\ occupied\ or\ doesn't\ exist,\r\n\ or\ the\ car\ with\ the\ same\ registration\ number\ is\ already\ parked.\r\n
comment9.params=registrationNumber
comment9.target=java.util.Map.Entry\ findCarByRegistration(java.lang.String)
comment9.text=\r\n\ Searches\ for\ a\ car\ in\ the\ parking\ slots\ by\ its\ registration\ number.\r\n\r\n\ @param\ registrationNumber\ The\ registration\ number\ of\ the\ car\ to\ find.\r\n\ @return\ A\ Map.Entry\ containing\ the\ Car\ and\ ParkingSlot\ where\ the\ car\ is\ parked\ if\ found;\ otherwise,\ null.\r\n
numComments=13
